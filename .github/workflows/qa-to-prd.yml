name: QA to PRD Validation

on:
  pull_request:
    branches:
      - prd
    types: [opened, synchronize, reopened]

jobs:
  check_source_branch:
    name: Check source branch
    runs-on: ubuntu-latest
    steps:
      - name: Check source branch is qa
        run: |
          if [[ "${{ github.head_ref }}" != "qa" ]]; then
            echo "This workflow is only for PRs from qa to prd"
            exit 1
          fi
        shell: bash

  run_integration_tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: check_source_branch
    container:
      image: databricksruntime/python:15.3-LTS
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .
          pip install -r requirements-dev.txt
      
      - name: Run all tests
        run: pytest -xvs tests/
        env:
          DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}
  
  deploy_to_qa_stage:
    name: Deploy to QA Stage
    runs-on: ubuntu-latest
    needs: run_integration_tests
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
        
      - name: Install databricks-cli
        run: pip install databricks-cli
      
      - name: Deploy to QA Stage
        run: |
          databricks bundle deploy --target qa
        env:
          DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}
      
      - name: Validate QA Deployment
        run: |
          # Validate that the deployment is successful by running a smoke test
          # This could be a simple query to check if the deployed resources work
          databricks bundles run job-get_taxis --target qa
        env:
          DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }} 