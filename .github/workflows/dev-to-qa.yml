name: Dev to QA Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - qa
    types: [opened, synchronize, reopened]

jobs:
  validate_bundle:
    name: Validate Bundle
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1  # Shallow checkout para melhorar performance
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Install Databricks CLI
        run: |
          echo "Instalando o CLI do Databricks..."
          curl -fsSL https://raw.githubusercontent.com/databricks/setup-cli/main/install.sh | sh
          # Verificar se o CLI foi instalado corretamente
          which databricks
          
      - name: Validate bundle format
        run: |
          databricks bundle validate
        env:
          DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }} 

  deploy_to_qa:
    name: Deploy to QA
    needs: validate_bundle
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Install Databricks CLI
        run: |
          echo "Instalando o CLI do Databricks..."
          curl -fsSL https://raw.githubusercontent.com/databricks/setup-cli/main/install.sh | sh
          # Verificar se o CLI foi instalado corretamente
          which databricks

      - name: Deploy bundle to qa
        run: |
          databricks bundle deploy -t qa
        env:
          DATABRICKS_HOST: ${{ secrets.DATABRICKS_QA_HOST }}
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_QA_TOKEN }}
          DATABRICKS_QA_HOST: ${{ secrets.DATABRICKS_QA_HOST }} 